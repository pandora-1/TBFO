START -> CNT
CNT -> CNT NEWLINE CNT | NEWLINE CNT | CNT NEWLINE | IF_CNT | ITERATE_CNT | CLASS_CNT | DEF_FUNC_CNT | ASS_OPS | FLOW_CNT | IMP_OPS | RAI_OP | FUNCTION | METH_CNT | WITH_CNT | PASS | STRING | LIST | DICT | VARIABLE | CONSTANT | NONE | COND_OPS | ASS_OPS
ITERATE_CNT -> FOR_CNT | WHILE_CNT | LIST | DICT | VARIABLE | CONSTANT
FLOW_CNT -> CONTINUE_CNT | BREAK_CNT
IF -> a
ELIF -> b
ELSE -> c
IF_CNT -> IF_HEADER CNT | IF_CNT ELIF_CNT | IF_CNT ELSE_CNT
IF_HEADER -> IF COND_OPS COLON NEWLINE
ELIF_CNT -> ELIF_HEADER CNT | ELIF_CNT ELIF_CNT | ELIF_CNT ELSE_CNT
ELIF_HEADER -> ELIF COND_OPS COLON NEWLINE
ELSE_CNT -> ELSE_HEADER CNT
ELSE_HEADER -> ELSE COLON NEWLINE
CNT_FUNC -> CNT_FUNC NEWLINE CNT_FUNC | CNT_FUNC NEWLINE | IF_CNT_FUNC | FOR_CNT_FUNC | WHILE_CNT_FUNC | CONTINUE_CNT_FUNC | BREAK_CNT_FUNC | CLASS_CNT | DEF_FUNC_CNT | ASS_OPS | IMP_OPS | RAI_OP | FUNCTION | METH_CNT | WITH_CNT_FUNC | PASS | STRING | DEF_FUNC_RETURN | LIST | DICT | VARIABLE | CONSTANT | NONE
IF_CNT_FUNC -> IF_HEADER CNT_FUNC | IF_CNT_FUNC ELIF_CNT_FUNC | IF_CNT_FUNC ELSE_CNT_FUNC
ELIF_CNT_FUNC -> ELIF_HEADER CNT_FUNC | ELIF_CNT_FUNC ELIF_CNT_FUNC | ELIF_CNT_FUNC ELSE_CNT_FUNC
ELSE_CNT_FUNC -> ELSE_HEADER CNT_FUNC
FOR -> d
IN -> e
FOR_CNT -> FOR_HEADER CNT
FOR_HEADER -> FOR FOR_VARIABLE IN ITERABLE COLON NEWLINE
FOR_VARIABLE -> VARIABLE | VARIABLE COMMA FOR_VARIABLE
ITERABLE -> STRING | LIST | VARIABLE | FUNCTION | METH_CNT | DICT
WHILE -> f
WHILE_CNT -> WHILE_HEADER CNT
WHILE_HEADER -> WHILE COND_OPS COLON NEWLINE
ITERATE -> FOR_HEADER | FOR_CNT | WHILE_HEADER | WHILE_CNT
CONTINUE -> g NEWLINE
CONTINUE_CNT -> ITERATE CONTINUE | ITERATE CONTINUE CNT
BREAK -> i NEWLINE
BREAK_CNT -> ITERATE BREAK | ITERATE BREAK CNT
PASS -> h
FOR_CNT_FUNC -> FOR_HEADER CNT_FUNC
WHILE_CNT_FUNC -> WHILE_HEADER CNT_FUNC
ITERATE_FUNC -> FOR_HEADER | FOR_HEADER CNT_FUNC | WHILE_HEADER | WHILE_HEADER CNT_FUNC
CONTINUE_CNT_FUNC -> ITERATE_FUNC CONTINUE | ITERATE CONTINUE CNT_FUNC
BREAK_CNT_FUNC -> ITERATE_FUNC BREAK | ITERATE_FUNC BREAK CNT_FUNC
CLASS -> j
CLASS_CNT -> CLASS_HEADER CLASS_BODY
CLASS_HEADER -> CLASS NAME COLON NEWLINE | CLASS NAME NRM_BKT_OPN CLASS_PARAM NRM_BKT_CLS COLON NEWLINE
CLASS_PARAM -> CLASS_PARAM COMMA CLASS_PARAM | NAME
CLASS_BODY -> CLASS_BODY NEWLINE CLASS_BODY | CLASS_BODY NEWLINE | IF_CNT | ITERATE_CNT | CLASS_CNT | DEF_FUNC_CNT | ASS_OPS | FLOW_CNT | IMP_OPS | FUNCTION | METH_CNT | PASS | STRING
DEF -> k
DEF_FUNC_CNT -> DEF_FUNC_HEADER DEF_FUNC_BODY
DEF_FUNC_HEADER -> DEF NAME NRM_BKT_OPN DEF_FUNC_PARAM NRM_BKT_CLS COLON NEWLINE | DEF NAME NRM_BKT_OPN NRM_BKT_CLS COLON NEWLINE
DEF_FUNC_BODY -> DEF_FUNC_BODY NEWLINE DEF_FUNC_BODY | CNT_FUNC
DEF_FUNC_RETURN -> RETURN ART_OPS | RETURN COND_OPS | RETURN DEF_FUNC_RETURN_VAL | RETURN
DEF_FUNC_RETURN_VAL -> METH_CNT | FUNCTION | VARIABLE | LIST | STRING | DICT | CONSTANT | NONE
DEF_FUNC_PARAM -> DEF_FUNC_PARAM COMMA DEF_FUNC_PARAM | NAME
RETURN -> l
WITH_CNT_FUNC -> WITH_HEADER CNT_FUNC
COND_OPS -> NRM_BKT_OPN COND_OPS NRM_BKT_CLS | COND_OPERAND COND_OPERATOR COND_OPS | COND_OPERAND
COND_OPERATOR -> REL_OP | LOG_OP | MEM_OP | IDN_OP
COND_OPERAND -> NOT COND_OPERAND | VARIABLE | CONSTANT | ART_OPS | METH_CNT | FUNCTION | LIST | STRING | NONE | NRM_BKT_OPN COND_OPERAND NRM_BKT_CLS
ASS_OPS -> VARIABLE ASS_OPERATOR ASS_OPERAND
ASS_OPERATOR -> ASS_OP
ASS_OPERAND -> NRM_BKT_OPN ASS_OPERAND NRM_BKT_CLS | VARIABLE | CONSTANT | COND_OPS | ART_OPS | METH_CNT | FUNCTION | LIST | STRING | DICT | NONE
ART_OPS -> NRM_BKT_OPN ART_OPS NRM_BKT_CLS | ART_OPS ART_OPERATOR ART_OPS | ART_OPERAND
ART_OPERATOR -> ART_OP | BIT_OP
ART_OPERAND -> VARIABLE | CONSTANT | METH_CNT | FUNCTION
VARIABLE -> NRM_BKT_OPN VARIABLE NRM_BKT_CLS | VAR_CTN
VAR_CTN -> NAME | NAME VAR_IDX | METH_CNT_NAME | METH_CNT_NAME VAR_IDX
VAR_IDX -> VAR_IDX VAR_IDX | [ IDX ] | [ COLON ] | [ IDX COLON ] | [ COLON IDX ] | [ IDX COLON IDX ] | [ COLON COLON ] | [ COLON COLON IDX ] | [ COLON IDX COLON ] | [ COLON IDX COLON IDX ] | [ IDX COLON COLON ] | [ IDX COLON COLON IDX ] | [ IDX COLON IDX COLON ] | [ IDX COLON IDX COLON IDX ]
IDX -> VARIABLE | CONSTANT | ART_OPS
NAME -> x
NUMBER -> PLUS NUMBER | MINUS NUMBER | NUMBER_CTN
POSITIVE_NUMBER -> PLUS POSITIVE_NUMBER | NUMBER_CTN
NUMBER_CTN -> y
CONSTANT -> NRM_BKT_OPN CONSTANT NRM_BKT_CLS | CON_CTN
CON_CTN -> TRUE | FALSE | NUMBER
FUNCTION -> FUNCTION_BASE | FUNCTION_BASE VAR_IDX
FUNCTION_BASE -> VARIABLE NRM_BKT_OPN FUNCTION_PARAM NRM_BKT_CLS | VARIABLE NRM_BKT_OPN NRM_BKT_CLS
FUNCTION_PARAM -> FUNCTION_PARAM COMMA FUNCTION_PARAM | VARIABLE | CONSTANT | STRING | LIST | DICT | NONE | FUNCTION | METH_CNT | ART_OPS | COND_OPS
METH_CNT -> METH_INIT DOT METH_CNT | METH_BACK_FUNC | METH_BACK_NAME
METH_CNT_NAME -> METH_INIT DOT METH_CNT_NAME | METH_BACK_NAME
METH_CNT_FUNC -> METH_INIT DOT METH_CNT_FUNC | METH_BACK_FUNC
METH_INIT -> NRM_BKT_OPN METH_INIT NRM_BKT_CLS | METH_BACK_FUNC | METH_BACK_NAME
METH_BACK_FUNC -> FUNCTION | FUNCTION VAR_IDX
METH_BACK_NAME -> NAME | NAME VAR_IDX
STRING -> z | z VAR_IDX | STRING MULTIPLY POSITIVE_NUMBER | STRING PLUS STRING
DICT -> CRL_BKT_OPN DICT_CNT CRL_BKT_CLS | CRL_BKT_OPN CRL_BKT_CLS
DICT_CNT -> DICT_TYPE COMMA DICT_TYPE | DICT_TYPE
DICT_TYPE -> DICT_TYPES COLON DICT_TYPES
DICT_TYPES -> VARIABLE | CONSTANT | STRING | FUNCTION | METH_CNT | NONE
LIST -> SQR_BKT_OPN LIST_CNT SQR_BKT_CLS | SQR_BKT_OPN SQR_BKT_CLS
LIST_TYPE -> VARIABLE | CONSTANT | STRING | FUNCTION | METH_CNT | LIST | DICT | NONE
LIST_CNT -> LIST_TYPE | LIST_CNT COMMA LIST_TYPE | LIST_TYPE FOR VARIABLE IN FUNCTION
IMP_OPS -> FROM IMP_CNT IMPORT IMPT_MOD | IMPORT IMP_CNT | IMPORT AS_BLOCK
AS_BLOCK -> AS_BLOCK COMMA AS_BLOCK | IMP_CNT AS NAME
IMP_CNT -> IMP_CNT DOT IMP_CNT | NAME
IMPT_MOD -> NAME | ALL | AS_BLOCK | IMPT_MOD COMMA IMPT_MOD
ALL -> *
AS -> m
IMPORT -> n
FROM -> o
RAI_OP -> RAISE RAI_BODY
RAI_BODY -> NRM_BKT_OPN RAI_BODY NRM_BKT_CLS | VARIABLE | CONSTANT | COND_OPS | ART_OPS | METH_CNT | FUNCTION | LIST | STRING | DICT | NONE
RAISE -> p
AND -> q
OR -> r
NOT -> s
IS -> t
TRUE -> u
FALSE -> v
NONE -> w
WITH_CNT -> WITH_HEADER CNT
WITH_HEADER -> WITH WITH_ST AS VARIABLE COLON NEWLINE
WITH_ST -> FUNCTION | METH_CNT_FUNC
WITH -> A
QUOTE -> '
DOUBLEQUOTE -> "
COLON -> :
COMMA -> ,
DOT -> .
PLUS -> +
MINUS -> -
MULTIPLY -> *
NEWLINE -> NEWLINE NEWLINE | __new_line__
SPACE -> SPACE SPACE | __space__
OR_SYM -> __or_sym__
REL_OP -> = = | ! = | < = | > = | < | > | IS
ASS_OP -> = | + = | - = | * = | * * = | / = | / / = | % =
ART_OP -> + | - | * | * * | / | / / | %
LOG_OP -> AND | OR
MEM_OP -> IN | NOT SPACE IN
IDN_OP -> IS | IS SPACE NOT
BIT_OP -> & | OR_SYM | ^ | > > | < < | ~\
SQR_BKT_OPN -> [
SQR_BKT_CLS -> ]
CRL_BKT_OPN -> {
CRL_BKT_CLS -> }
NRM_BKT_OPN -> (
NRM_BKT_CLS -> )
